#!/usr/bin/env node

var program = require('commander'),
    mkdirp  = require('mkdirp'),
    fs      = require('fs'),
    path    = require('path'),
    pkg     = require('../package.json'),
    version = pkg.version;

// CLI

program
	.version(version)
	.usage('[app name]')
	.parse(process.argv)


var start = function() {
	var destinationPath = program.args.shift() || '.';
	var appName = path.basename( path.resolve( destinationPath ) );

	createApplication(appName, destinationPath);
};

var createApplication = function(appName, location) {
	var done = function() {
		console.log('cd %s && npm install', location);
		console.log('nodemon to start server');
	};

	var server 							= readTemplate('js/server.js'),
	    www    							= readTemplate('js/www'),
	    packageJson 				= readTemplate('js/package.json'),
	    modelsIndex 				= readTemplate('js/index.js'),
	    configFile          = readTemplate('js/config.json'),
	    browserDependencies = readTemplate('js/main.js'),
	    app                 = readTemplate('js/app.js'),
	    bundle              = readTemplate('js/bundle.js'),
	    index               = readTemplate('html/index.html');

	makeFolder(location, function() {
		makeFolder(location + '/public', function() {
			writeToFile(location + '/public/index.html', index, null);
		});

		makeFolder(location + '/public/js', function() {
			makeFolder(location + '/public/js/models');
			makeFolder(location + '/public/js/collections');
			makeFolder(location + '/public/js/views');
			makeFolder(location + '/public/js/routers');
			writeToFile(location + '/public/js/app.js', app, null);
		});

		makeFolder(location + '/public/css', function() {
			writeToFile(location + '/public/css/.keep', null, null);
		});

		makeFolder(location + '/config', function() {
			configFile = configFile.replace(/{name}/g, appName)
			writeToFile(location + '/config/config.json', configFile, null);
		});

		makeFolder(location + '/migrations', function() {
			writeToFile(location + '/migrations/.keep', null, null);
		});

		makeFolder(location + '/models', function() {
			writeToFile(location + '/models/index.js', modelsIndex, null);
		});

		makeFolder(location + '/bin', function() {
			writeToFile(location + '/bin/www', www, null);
		});

		makeFolder(location + '/browser', function() {
			writeToFile(location + '/browser/main.js', browserDependencies, null);
			writeToFile(location + '/browser/bundle.js', bundle, null)
		});

		writeToFile(location + '/server.js', server, null);

		// write package.json
		packageJson = packageJson.replace(/{name}/g, appName);
		writeToFile(location + '/package.json', packageJson, null);
	});
};

var writeToFile = function(path, content, mode) {
  fs.writeFileSync(path, content, { mode: mode || 0666 });
  console.log('   \x1b[36mcreate\x1b[0m : ' + path);
};

var makeFolder = function(path, fn) {
	mkdirp(path, 0755, function(err){
    if (err) throw err;
    console.log('   \033[36mcreate\033[0m : ' + path);
    fn && fn();
  });
};

var readTemplate = function(template) {
	return fs.readFileSync(path.join(__dirname, '..', 'templates', template), 'utf-8');
};

// start process
start();